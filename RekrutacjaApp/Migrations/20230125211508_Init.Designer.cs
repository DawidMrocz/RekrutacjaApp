// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RekrutacjaApp.Data;

#nullable disable

namespace RekrutacjaApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230125211508_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RekrutacjaApp.Entities.CustomAttribute", b =>
                {
                    b.Property<int>("CustomAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomAttributeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomAttributeId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomAttributes");

                    b.HasData(
                        new
                        {
                            CustomAttributeId = 1,
                            Name = "Numer buta",
                            UserId = 1,
                            Value = "43"
                        },
                        new
                        {
                            CustomAttributeId = 2,
                            Name = "Kolor włosów",
                            UserId = 2,
                            Value = "Czarne"
                        },
                        new
                        {
                            CustomAttributeId = 3,
                            Name = "Kolor kurtki",
                            UserId = 2,
                            Value = "Nibieski"
                        });
                });

            modelBuilder.Entity("RekrutacjaApp.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateTime(1996, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "Dawid",
                            Surname = "Mroczkowski"
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateTime(1997, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "Adam",
                            Surname = "Nowak"
                        },
                        new
                        {
                            UserId = 3,
                            BirthDate = new DateTime(1986, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "Jan",
                            Surname = "Kowalski"
                        },
                        new
                        {
                            UserId = 4,
                            BirthDate = new DateTime(1979, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Famale",
                            Name = "Karolina",
                            Surname = "Szpak"
                        },
                        new
                        {
                            UserId = 5,
                            BirthDate = new DateTime(1944, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Famale",
                            Name = "Wiktoria",
                            Surname = "Kowalska"
                        },
                        new
                        {
                            UserId = 6,
                            BirthDate = new DateTime(1990, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "Zbigniew",
                            Surname = "Stawik"
                        });
                });

            modelBuilder.Entity("RekrutacjaApp.Entities.CustomAttribute", b =>
                {
                    b.HasOne("RekrutacjaApp.Entities.User", "User")
                        .WithMany("CustomAttributes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RekrutacjaApp.Entities.User", b =>
                {
                    b.Navigation("CustomAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
